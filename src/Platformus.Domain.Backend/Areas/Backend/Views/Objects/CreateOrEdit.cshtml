@* Copyright © 2015 Dmitry Sikorsky. All rights reserved. *@
@* Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information. *@
@model Platformus.Domain.Backend.ViewModels.Objects.CreateOrEditViewModel
@{
  this.ViewBag.Title = (this.Model.Id == null ? "Create" : "Edit") + " " + this.Model.Class.Name;
  this.ViewBag.ActiveMenuItem = "objects";
}
@section title {
  @ViewBag.Title
}
<form class="forms" method="post">
  <div id="tabs" class="tabs"></div>
  <div id="tabPages" class="tab-pages">
    <div id="tabPage0" class="tab-pages__tab-page"></div>
  </div>
  <div class="form__buttons buttons">
    <button class="buttons__button button button--positive" type="submit">Save</button>
    <a class="buttons__button button button--neutral" href="@this.Context.Request.CombineUrl("/backend/objects")">Cancel</a>
  </div>
</form>
<script type="text/javascript">
  var membersByTabs = [
    @foreach (var tab in this.Model.MembersByTabs.Keys)
    {
      @:{
        @:id: @tab.Id,
        @:name: "@tab.Name",
        @:members: [
          @foreach (var member in this.Model.MembersByTabs[tab])
          {
            @:{
              @:id: @member.Id,
              @:name: "@Html.Raw(member.Name)",
              @if (member.PropertyDataType != null)
              {
                @:propertyDataType: { javaScriptEditorClassName: "@member.PropertyDataType.JavaScriptEditorClassName" },
                @:isPropertyLocalizable: @member.IsPropertyLocalizable.ToString().ToLower(),
                @:property: {
                  @if (member.PropertyDataType.StorageDataType == Platformus.Domain.StorageDataType.Integer)
                  {
                    @:integerValue: @member.Property.IntegerValue
                  }
                  else if (member.PropertyDataType.StorageDataType == Platformus.Domain.StorageDataType.Decimal)
                  {
                    @:decimalValue: @member.Property.DecimalValue
                  }
                  else if (member.PropertyDataType.StorageDataType == Platformus.Domain.StorageDataType.String)
                  {
                    @:stringValue: {
                      @:localizations: [
                        foreach (var localization in member.Property.StringValueLocalizations)
                        {
                          @: { culture: { code: "@localization.Culture.Code" }, value: "@Html.Raw(string.IsNullOrEmpty(localization.Value) ? null : localization.Value.Replace("\r\n", "\\r\\n").Replace("\n", "\\n").Replace("\"", "\\\""))" }@(localization != member.Property.StringValueLocalizations.Last() ? "," : null)
                        }
                      @:]
                    @:}
                  }
                  else if (member.PropertyDataType.StorageDataType == Platformus.Domain.StorageDataType.DateTime)
                  {
                    @:dateTimeValue: "@member.Property.DateTimeValue"
                  }
                @:}
              }
              else if (member.RelationClass != null)
              {
                @:relationClass: { id: @member.RelationClass.Id },
                @:isRelationSingleParent: @member.IsRelationSingleParent.ToString().ToLower(),
                @:relations: [
                  @foreach (var relation in member.Relations)
                  {
                    @:{ primaryId: @relation.PrimaryId }@(relation != member.Relations.Last() ? "," : null)
                  }
                @:]
              }
            @:}@(member.Id != this.Model.MembersByTabs[tab].Last().Id ? "," : null)
          }
        @:]
      @:}@(tab != this.Model.MembersByTabs.Keys.Last() ? "," : null)
    }
  ];

  platformus.editors.create(membersByTabs);
</script>